import * as mysql from 'mysql2'
import { BOPREFIX, HOPREFIX, TABLENAME, COLUMNLIST } from './constants'
import { generateData } from './generateData'
const connectionBO1 = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: '',
    database: BOPREFIX + '1'
})

const connectionBO2 = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: '',
    database: BOPREFIX + '2'
})

const connectionHO = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: '',
    database: HOPREFIX
})

// create table if not exists achat (article varchar(255), quantite int, prix int, date date) in bo 1 and bo 2 and table achat(source : "bo_1" | "bo_2",article varchar(255), quantite int, prix int, date date) in ho, give them ids autogenerated

const createTable = (connection: mysql.Connection, tableName: string, columnList: { name: string, type: string }[]) => {
    const query = `CREATE TABLE if not exists ${tableName} (id int auto_increment primary key, ${columnList.map(column => `${column.name} ${column.type}`).join(', ')})`
    console.log(query)
    connection.query(query, (err, result) => {
        if (err) throw err
        console.log(`table ${tableName} created`)
    })
}

createTable(connectionBO1, TABLENAME, COLUMNLIST)
createTable(connectionBO2, TABLENAME, COLUMNLIST)
createTable(connectionHO, TABLENAME, [{ name: 'source', type: 'varchar(255)' }, ...COLUMNLIST])

// create a table named cache in BO1 and BO2 with the same columns as achata

const createCacheTable = (connection: mysql.Connection, tableName: string, columnList: { name: string, type: string }[]) => {
    const query = `CREATE TABLE if not exists ${tableName} (${columnList.map(column => `${column.name} ${column.type}`).join(', ')})`
    console.log(query)
    connection.query(query, (err, result) => {
        if (err) throw err
        console.log(`table ${tableName} created`)
    })
}

createCacheTable(connectionBO1, 'cache', COLUMNLIST)
createCacheTable(connectionBO2, 'cache', COLUMNLIST)

// create a trigger in BO1 and BO2 that will insert the new row in the cache table on every insert in the achat table

const createTrigger = (connection: mysql.Connection, tableName: string, triggerName: string) => {
    const query = `CREATE TRIGGER if not exists ${triggerName} AFTER INSERT ON ${tableName} FOR EACH ROW INSERT INTO cache VALUES (NEW.article, NEW.quantite, NEW.prix, NEW.date)`
    console.log(query)
    connection.query(query, (err, result) => {
        if (err) throw err
        console.log(`trigger ${triggerName} created`)
    })
}

createTrigger(connectionBO1, TABLENAME, 'insert_in_cache')
createTrigger(connectionBO2, TABLENAME, 'insert_in_cache')

// Fill the tables with some data

const insertData = (connection: mysql.Connection, tableName: string, data: { article: string, quantite: number, prix: number, date: string }[]) => {
    const query = `INSERT INTO ${tableName} (article, quantite, prix, date) VALUES ${data.map(row => `("${row.article}", ${row.quantite}, ${row.prix}, "${row.date}")`).join(', ')}`
    console.log(query)
    connection.query(query, (err, result) => {
        if (err) throw err
        console.log(`data inserted`)
    })
}

insertData(connectionBO1, TABLENAME, generateData(10))
insertData(connectionBO2, TABLENAME, generateData(10))

